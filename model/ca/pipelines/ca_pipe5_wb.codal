/**
 * Codasip s.r.o.
 *
 * CONFIDENTIAL
 *
 * Copyright 2022 Codasip s.r.o.
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of
 * Codasip s.r.o. and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip s.r.o. and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 *
 *  \file   ca_pipe5_wb.codal
 *  \author Codasip
 *  \date   09.02.2022
 *  \brief  Write-back - cycle accurate model
 */

 #include "config.hcodal"
 #include "ca_defines.hcodal"

// -------------------------------------------------------------------------------------------------
// Write-Back Stage
// -------------------------------------------------------------------------------------------------

event wb : pipeline(pipe.WB)
{
    semantics
    { 
        // Increment the PC by 4
        s_wb_pc = r_wb_pc + 4;

        // Add multiplexor for Register file write result
        switch (r_wb_rfwt_sel)
        {
            case(RFWT_ALU):
                s_wb_result = r_wb_alu;
                break;
            case(RFWT_PC):
                s_wb_result = s_wb_pc;
                break;
            case(RFWT_MEM):
                s_wb_result = 0;
                break;
            default:
                s_wb_result = 0;
                break;
        }

        if (r_wb_regwrite && (r_wb_rd != 0))
        {
            rf_xpr.wrt0[r_wb_rd] = s_wb_result;
            codasip_info(INFO_RF_WRITE, "rf_xpr[%d] = 0x%x", s_wb_result, s_wb_result);
        }

        // Set local stall.
        s_wb_stall = 0;

    };
};
